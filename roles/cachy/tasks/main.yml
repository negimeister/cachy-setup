- name: Update package cache
  pacman:
    update_cache: yes
  become: yes
# Install yay from AUR without interactive sudo

- name: Ensure required packages are installed
  pacman:
    name:
      - git
      - base-devel
      - go
      - python-requests
      - python-packaging
      - python-docker      
    state: present
    update_cache: yes
  become: yes

- name: Check if yay is already installed
  command: yay --version
  register: yay_check
  ignore_errors: yes
  changed_when: false

- name: Install yay if not present
  block:
    - name: Clone yay repository
      git:
        repo: https://aur.archlinux.org/yay.git
        dest: /tmp/yay
        update: no
      become: no

    - name: Build yay package (no install yet)
      command: makepkg -sf --noconfirm
      args:
        chdir: /tmp/yay
      become: no

    - name: Find built yay package
      find:
        paths: /tmp/yay
        patterns: "yay-*.pkg.tar.zst"
      register: yay_pkg

    - name: Install built yay package
      pacman:
        name: "{{ yay_pkg.files[0].path }}"
        state: present
      become: yes

    - name: Clean up yay build directory
      file:
        path: /tmp/yay
        state: absent
      become: no
  when: yay_check.rc != 0
- name: Install Docker
  pacman:
    name: docker
    state: present
  become: yes

- name: Enable and start Docker service
  systemd:
    name: docker
    enabled: yes
    state: started
  become: yes

- name: Add current user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  become: yes

- name: Log in to Docker Hub
  community.docker.docker_login:
    username: "{{ docker_hub_username }}"
    password: "{{ docker_hub_password }}"
    registry_url: https://index.docker.io/v1/
  become: yes


- name: Install distrobox
  pacman:
    name: distrobox
    state: present
    update_cache: yes
  become: yes

- name: Check if distrobox container already exists
  command: distrobox list --no-color
  register: distrobox_list
  changed_when: false
  failed_when: false
  become: no

- name: Create distrobox container
  command: >
    distrobox create
    --yes
    --name negibox
    --image negimeister/negibox-desktop
  when: "' negibox '  not in (' ' + distrobox_list.stdout + ' ')"
  become: no

